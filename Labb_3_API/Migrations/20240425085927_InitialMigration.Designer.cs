// <auto-generated />
using Labb_3_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_3_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240425085927_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb_3_API.Models.Interest", b =>
                {
                    b.Property<int>("IntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            IntId = 1,
                            Description = "Konsten att fånga ögonblicket",
                            Title = "Fotografering"
                        },
                        new
                        {
                            IntId = 2,
                            Description = "Utveckling av programvara och applikationer",
                            Title = "Programmering"
                        });
                });

            modelBuilder.Entity("Labb_3_API.Models.Link", b =>
                {
                    b.Property<int>("LiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LiId"));

                    b.Property<int>("PersonInterestId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LiId");

                    b.HasIndex("PersonInterestId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LiId = 1,
                            PersonInterestId = 1,
                            URL = "https://pixabay.com/sv/"
                        },
                        new
                        {
                            LiId = 2,
                            PersonInterestId = 2,
                            URL = "https://www.freecodecamp.org/"
                        },
                        new
                        {
                            LiId = 3,
                            PersonInterestId = 3,
                            URL = "https://www.iamtimcorey.com/"
                        });
                });

            modelBuilder.Entity("Labb_3_API.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Anna Andersson",
                            PhoneNumber = "0731234567"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Berit Bengtsson",
                            PhoneNumber = "0741234568"
                        });
                });

            modelBuilder.Entity("Labb_3_API.Models.PersonInterest", b =>
                {
                    b.Property<int>("PersonInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonInterestId"));

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PerId")
                        .HasColumnType("int");

                    b.HasKey("PersonInterestId");

                    b.HasIndex("InterestId");

                    b.HasIndex("PerId");

                    b.ToTable("PersonInterests");

                    b.HasData(
                        new
                        {
                            PersonInterestId = 1,
                            InterestId = 1,
                            PerId = 1
                        },
                        new
                        {
                            PersonInterestId = 2,
                            InterestId = 2,
                            PerId = 1
                        },
                        new
                        {
                            PersonInterestId = 3,
                            InterestId = 2,
                            PerId = 2
                        });
                });

            modelBuilder.Entity("Labb_3_API.Models.Link", b =>
                {
                    b.HasOne("Labb_3_API.Models.PersonInterest", "PersonInterest")
                        .WithMany("Links")
                        .HasForeignKey("PersonInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonInterest");
                });

            modelBuilder.Entity("Labb_3_API.Models.PersonInterest", b =>
                {
                    b.HasOne("Labb_3_API.Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_3_API.Models.Person", "Person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Labb_3_API.Models.Interest", b =>
                {
                    b.Navigation("PersonInterests");
                });

            modelBuilder.Entity("Labb_3_API.Models.Person", b =>
                {
                    b.Navigation("PersonInterests");
                });

            modelBuilder.Entity("Labb_3_API.Models.PersonInterest", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
